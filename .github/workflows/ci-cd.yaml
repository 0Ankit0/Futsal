name: Aspire CI/CD

on:
  push:
    branches: ["master"]

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Create publish directory
        run: mkdir -p ${{ github.workspace }}/publish

      - name: Publish Aspire App Manifest
        run: |
          # Generate the manifest files into the 'publish' directory.
          # Because the directory now exists, this command will correctly place
          # 'manifest.json' and other assets inside it.
          dotnet run --project FutsalApi/FutsalApi.AppHost --publisher manifest --output-path ${{ github.workspace }}/publish

      - name: Debug - List publish directory contents
        run: |
          echo "Contents of ./publish directory:"
          ls -la ${{ github.workspace }}/publish

      - name: Deploy to DigitalOcean - Prepare remote
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USERNAME }}
          password: ${{ secrets.DO_PASSWORD }}
          script: |
            # Stop and remove any previous containers gracefully
            if docker ps -q | grep .; then
              echo "Stopping running Docker containers..."
              docker stop $(docker ps -q)
            else
              echo "No running Docker containers to stop."
            fi

            if docker ps -aq | grep .; then
              echo "Removing all Docker containers..."
              docker rm $(docker ps -aq)
            else
              echo "No Docker containers to remove."
            fi

            # Clean and create the app directory
            echo "Recreating app directory..."
            rm -rf /home/${{ secrets.DO_USERNAME }}/app
            mkdir -p /home/${{ secrets.DO_USERNAME }}/app

      - name: Copy published files to DigitalOcean
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USERNAME }}
          password: ${{ secrets.DO_PASSWORD }}
          # Copy all files from the 'publish' directory.
          source: "publish/*"
          target: "/home/${{ secrets.DO_USERNAME }}/app"

      - name: Deploy using Aspire Manifest
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USERNAME }}
          password: ${{ secrets.DO_PASSWORD }}
          script: |
            cd /home/${{ secrets.DO_USERNAME }}/app
            echo "Listing files in remote app directory:"
            ls -la

            # Check if a docker-compose file exists and deploy
            # Aspire manifest publisher often creates a compose file for deployment
            if [ -f "docker-compose.yml" ]; then
                echo "Found docker-compose.yml, deploying..."
                docker compose up -d --build
            elif [ -f "compose.yaml" ]; then
                echo "Found compose.yaml, deploying..."
                docker compose up -d --build
            else
              echo "ERROR: No docker-compose.yml or manifest.json found for deployment!"
              exit 1
            fi
