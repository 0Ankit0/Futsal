name: Aspire CI/CD

on:
  push:
    branches: ["master"]

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Publish Aspire App for Docker Compose
        run: |
          # Generate the manifest files (Aspire workload should already be installed on the runner)
          dotnet run --project FutsalApi/FutsalApi.AppHost --publisher manifest --output-path ./publish

      - name: Debug - List publish directory contents
        run: |
          echo "Contents of ./publish directory:"
          ls -la ./publish || echo "Publish directory does not exist"
          echo "Contents of current directory:"
          ls -la .
          echo "Total files in publish directory (if exists):"
          find ./publish -type f 2>/dev/null | wc -l || echo "0"

      - name: Deploy to DigitalOcean
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USERNAME }}
          password: ${{ secrets.DO_PASSWORD }}
          script: |
            # Stop and remove any previous containers managed by compose
            # The project name is derived from the directory name, which will be 'publish'
            cd /home/${{ secrets.DO_USERNAME }}/app && docker-compose -p futsalapi down --remove-orphans || true
            # Remove the old publish directory
            rm -rf /home/${{ secrets.DO_USERNAME }}/app
            # Create a new directory for the app
            mkdir -p /home/${{ secrets.DO_USERNAME }}/app

      - name: Copy published files to DigitalOcean
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USERNAME }}
          password: ${{ secrets.DO_PASSWORD }}
          source: "publish/*"
          target: "/home/${{ secrets.DO_USERNAME }}/app"
          strip_components: 1

      - name: Run Docker Compose on DigitalOcean
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USERNAME }}
          password: ${{ secrets.DO_PASSWORD }}
          script: |
            cd /home/${{ secrets.DO_USERNAME }}/app
            docker-compose -p futsalapi up -d --build
