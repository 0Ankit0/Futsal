# Base image for ASP.NET Core
FROM mcr.microsoft.com/dotnet/aspnet:9.0 AS base
USER app
WORKDIR /app
EXPOSE 8080
EXPOSE 8081

# Build stage
FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build
ARG BUILD_CONFIGURATION=Release
WORKDIR /src
COPY ["FutsalApi.ApiService.csproj", "."]
RUN dotnet restore "./FutsalApi.ApiService.csproj"
COPY . .
WORKDIR "/src/."
RUN dotnet build "./FutsalApi.ApiService.csproj" -c $BUILD_CONFIGURATION -o /app/build

# Publish stage
FROM build AS publish
ARG BUILD_CONFIGURATION=Release
RUN dotnet publish "./FutsalApi.ApiService.csproj" -c $BUILD_CONFIGURATION -o /app/publish /p:UseAppHost=false

# Final stage (Production image)
FROM base AS final

# Step 1: Setup application
WORKDIR /app
COPY --from=publish /app/publish .

# Step 2: Add GitHub Actions Runner
WORKDIR /actions-runner

# Download and extract the GitHub Actions Runner
USER root
RUN apt-get update && apt-get install -y curl jq git

# Check if .NET 9.0 is installed, and install it if not
RUN if ! dotnet --list-sdks | grep -q "9.0"; then \
    echo ".NET 9.0 is not installed. Installing .NET 9.0..."; \
    curl -o dotnet-install.sh https://dotnet.microsoft.com/download/dotnet/scripts/v1/dotnet-install.sh; \
    chmod +x dotnet-install.sh; \
    ./dotnet-install.sh --channel 9.0; \
    export PATH="$HOME/.dotnet:$PATH"; \
    else \
    echo ".NET 9.0 is already installed."; \
    fi

# Download and configure GitHub Actions Runner
RUN curl -o actions-runner-linux-x64-2.323.0.tar.gz -L https://github.com/actions/runner/releases/download/v2.323.0/actions-runner-linux-x64-2.323.0.tar.gz
RUN echo "0dbc9bf5a58620fc52cb6cc0448abcca964a8d74b5f39773b7afcad9ab691e19  actions-runner-linux-x64-2.323.0.tar.gz" | shasum -a 256 -c
RUN tar xzf actions-runner-linux-x64-2.323.0.tar.gz
RUN rm actions-runner-linux-x64-2.323.0.tar.gz

# Fix permissions for app user
RUN chown -R app:app /actions-runner

# Copy and configure entrypoint script
COPY entrypoint.sh /actions-runner/entrypoint.sh
RUN chmod +x /actions-runner/entrypoint.sh

# Switch back to app user
USER app

# Entrypoint for the container
ENTRYPOINT ["/actions-runner/entrypoint.sh"]

# Instructions for building and running the Docker container:
# Step 1: Build the Docker image
# docker build -t github-actions-runner .

# Step 2: Run the container
# docker run -d -e RUNNER_URL=https://github.com/<your-org-or-user>/<your-repo> -e RUNNER_TOKEN=<your-token> --name github-actions-runner github-actions-runner