@page "/book-futsal/{id:int}"
@using FutsalApi.UI.Shared.Services
@using FutsalApi.UI.Shared.Models
@inject BookingService BookingService
@inject FutsalService FutsalService

<h1>Book Futsal</h1>

@if (futsalGround != null)
{
    <div>
        <h2>@futsalGround.Name</h2>
        <p><strong>Location:</strong> @futsalGround.Location</p>
        <p><strong>Price per Hour:</strong> @futsalGround.PricePerHour</p>

        <div class="form-group">
            <label for="bookingDate">Booking Date</label>
            <input type="date" class="form-control" id="bookingDate" @bind="bookingRequest.BookingDate" />
        </div>

        <div class="form-group">
            <label for="startTime">Start Time</label>
            <input type="time" class="form-control" id="startTime" @bind="bookingRequest.StartTime" />
        </div>

        <div class="form-group">
            <label for="endTime">End Time</label>
            <input type="time" class="form-control" id="endTime" @bind="bookingRequest.EndTime" />
        </div>

        <button class="btn btn-primary" @onclick="Book">Book</button>
    </div>
}
else
{
    <p>Loading...</p>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private FutsalApi.UI.Shared.Models.FutsalGroundResponse futsalGround;
    private FutsalApi.UI.Shared.Models.BookingRequest bookingRequest = new FutsalApi.UI.Shared.Models.BookingRequest();

    protected override async Task OnInitializedAsync()
    {
        futsalGround = (FutsalGroundResponse)await FutsalService.GetFutsalGroundById(Id);
        bookingRequest.FutsalGroundId = Id;
    }

    private async Task Book()
    {
        await BookingService.BookFutsal(bookingRequest);
    }
}
